<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Главная on Backend-заметки</title>
    <link>https://rsimkin.github.io/</link>
    <description>Recent content in Главная on Backend-заметки</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <managingEditor>r.s.simkin@yandex.ru (Симкин Роман)</managingEditor>
    <webMaster>r.s.simkin@yandex.ru (Симкин Роман)</webMaster>
    <lastBuildDate>Fri, 22 Feb 2019 21:45:45 +0300</lastBuildDate>
    
	<atom:link href="https://rsimkin.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Насколько &#34;быстро&#34; можно вставить в twig-шаблоны виджет</title>
      <link>https://rsimkin.github.io/post/%D0%B2%D1%81%D1%82%D1%80%D0%B0%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC-%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D0%BB%D0%B5%D1%80%D0%BE%D0%B2-%D0%B2-twig-%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D1%8B-%D0%B1%D1%8B%D1%81%D1%82%D1%80%D0%BE/</link>
      <pubDate>Fri, 22 Feb 2019 21:45:45 +0300</pubDate>
      <author>r.s.simkin@yandex.ru (Симкин Роман)</author>
      <guid>https://rsimkin.github.io/post/%D0%B2%D1%81%D1%82%D1%80%D0%B0%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC-%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D0%BB%D0%B5%D1%80%D0%BE%D0%B2-%D0%B2-twig-%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D1%8B-%D0%B1%D1%8B%D1%81%D1%82%D1%80%D0%BE/</guid>
      <description>Введение В данной статье речь пойдет о том, как организовать код так, чтобы иметь возможность вставлять в разных twig-шаблонах одинаковые блоки (виджеты). Рассмотрим несколько вариантов реализации такого механизма.
WidgetController Данный способ предполагает, что виджеты являются методами контроллера. Пример &amp;lt;?php namespace App\\Controller; use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController; use Symfony\\Component\\HttpFoundation\\Response; class WidgetController extends AbstractController { public function widget(): Response { return $this-&amp;gt;render(&amp;#39;widget.html.twig&amp;#39;, [&amp;#39;number&amp;#39; =&amp;gt; rand()]); } } 
В шаблоне блок можно отрисовать так: {{ render(controller(&amp;#39;App\\Controller\\WidgetController:widget&amp;#39;)) }}</description>
    </item>
    
    <item>
      <title>Highloadcup 2018</title>
      <link>https://rsimkin.github.io/post/highloadcup-2018/</link>
      <pubDate>Tue, 19 Feb 2019 10:29:23 +0300</pubDate>
      <author>r.s.simkin@yandex.ru (Симкин Роман)</author>
      <guid>https://rsimkin.github.io/post/highloadcup-2018/</guid>
      <description>Введение В данной статье я хочу рассказать о своем опыте участие в конкурсе Highloadcup 2018 от Mail.ru. О конкурсе я узнал из поста на хабре, а изначальной мотивацией принять участие было желание более опытных коллег посоревноваться.
В рамках конкурса нужно было спроектировать и упаковать в Docker приложение, которое реализовывает несложное, но объемное по бизнес-логике REST API. Требуется реализовать 4 GET-запроса и 3 POST-запроса. Затем решение нужно отправить в docker-registry, после оно будет обстрелено с помощью yandex-tank разными профилями обстрела.</description>
    </item>
    
    <item>
      <title>Использование аннотаций в PHP Storm</title>
      <link>https://rsimkin.github.io/post/phpstrom-annotations/</link>
      <pubDate>Sun, 09 Dec 2018 13:25:58 +0000</pubDate>
      <author>r.s.simkin@yandex.ru (Симкин Роман)</author>
      <guid>https://rsimkin.github.io/post/phpstrom-annotations/</guid>
      <description>Хочу поделиться с вами таким полезным функционалом, как аннотации. Чтобы проникнуться всей полезностью аннотаций, нужно чтобы:
 проект находился в контроле версий сообщение каждого коммита было выдержано в определенной нотации или хотя бы содержало ссылку на трекер (например, задача в JIRA).  Чтобы показать аннотации, нужно нажать слева от рабочий области текстового редактора PHP Storm.      Теперь мы видим авторов последних изменений каждой строки в файле, а при двойном клике на область аннотации мы увидим во всплывающем окне файлы, которые изменились вместе с изменениями текущей строки.</description>
    </item>
    
    <item>
      <title>Практические советы по разработке на 1С-Битрикс</title>
      <link>https://rsimkin.github.io/post/bitrix-notes/</link>
      <pubDate>Mon, 03 Dec 2018 16:03:58 +0000</pubDate>
      <author>r.s.simkin@yandex.ru (Симкин Роман)</author>
      <guid>https://rsimkin.github.io/post/bitrix-notes/</guid>
      <description>Введение В данной статье я хочу отразить ряд советов и подсказок по работе с 1С-Битрикс, а также оградить читателя от подводных камней, с которыми я сталкивался сам или сталкивалась команда.
Важно заметить, что разработка на 1С-Битрикс имеет свою специфику, которую в данной статье я не подвергаю критике.
Это всего лишь еще один инструмент для бизнеса, основанного на веб-разработке, и нужно попробовать использовать его на максимум.
Агенты в 1С-Битрикс В 1С-Битрикс существует система внутреннего менеджера фоновых задач.</description>
    </item>
    
    <item>
      <title>Разбор интересного задания на PHP</title>
      <link>https://rsimkin.github.io/post/php-interview-funny-task/</link>
      <pubDate>Mon, 05 Nov 2018 19:16:58 +0000</pubDate>
      <author>r.s.simkin@yandex.ru (Симкин Роман)</author>
      <guid>https://rsimkin.github.io/post/php-interview-funny-task/</guid>
      <description>Введение На одном собеседовании на должность php-разработчика было предоставлено своеобразное задание. Условие было поставлено следующее.
Дан фрагмент кода:
&amp;lt;?php class A { private $x = 5; } $a = new A;  Требуется предложить как можно больше способов, которыми можно получить значение $x.
Решение Некоторые решения показались нестандартным и интересным. Предлагаю следующие варианты:
Способ 1. Reflection API &amp;lt;?php $reflectionClass = new ReflectionClass($a); $property = $reflectionClass-&amp;gt;getProperty(&amp;#39;x&amp;#39;); $property-&amp;gt;setAccessible(true); var_dump($property-&amp;gt;getValue($a)); 
Способ 2.</description>
    </item>
    
    <item>
      <title>Обо мне</title>
      <link>https://rsimkin.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>r.s.simkin@yandex.ru (Симкин Роман)</author>
      <guid>https://rsimkin.github.io/page/about/</guid>
      <description>Меня зовут Симкин Роман, я занимаюсь веб-разработкой. В данном блоге я хочу поделиться:
 решениями и практиками, которые применял; задачами, с которыми сталкивался; ошибками и способами их исправления.  </description>
    </item>
    
  </channel>
</rss>